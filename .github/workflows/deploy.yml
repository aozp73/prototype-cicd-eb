name: aws-portfolio
on:
  push:
    branches:
      - dev

jobs:
  build:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: 1234
      mongodb:
        image: mongo
   
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: zulu

      - name: Start MySQL
        uses: mirromutth/mysql-action@v1.1
        with:
          host port: 3306
          container port: 3306
          mysql database: 'portfolio_test'
          mysql root password: ${{ secrets.RDS_PASSWORD }}
          
      - name: Create mongo Docker container
        uses: DigiPie/mongo-action@v2.0.1
        with:
          image_version: latest
          port: 27017
      - name: Install mongosh command
        run: |
          sudo apt-get update
          sudo apt-get install -y wget gnupg
          wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | sudo apt-key add -
          echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu jammy/mongodb-org/6.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-6.0.list
          sudo apt-get update
          sudo apt-get install -y mongodb-mongosh
      - name: Test mongo connection
        run: "sudo mongosh localhost:27017"

      - name: Set Yaml
        uses: microsoft/variable-substitution@v1
        with:
          files: './src/main/resources/application-prod.yml, ./src/test/resources/application-test.yml' 
        env:
          spring.datasource.url: ${{ secrets.RDS_HOST }}
          spring.datasource.username: ${{ secrets.RDS_USERNAME }}
          spring.datasource.password: ${{ secrets.RDS_PASSWORD }}
          spring.data.mongodb.uri : ${{ secrets.MONGO_HOST }}
          cloud.aws.region.static: ${{ secrets.STATIC }}
          cloud.aws.s3.bucket: ${{ secrets.BUCKET }}
          cloud.aws.credentials.access-key : ${{ secrets.S3_AWS_SECRET_KEY }}
          cloud.aws.credentials.secret-key: ${{ secrets.AWS_SECRET_KEY }}
          sentry.dsn : ${{ secrets.SENTRY_DSN }}
          name : ${{ secrets.MY_JWT }}
          
      - name: Debug - Show application-prod.yml
        run: cat ./src/main/resources/application-prod.yml

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
      - name: Build with Gradle
        run: ./gradlew clean build

      - name: Get current time
        uses: 1466587594/get-current-time@v2
        id: current-time
        with:
          format: YYYY-MM-DDTHH-mm-ss
          utcOffset: "+09:00"

      - name: Show Current Time
        run: echo "CurrentTime=${{steps.current-time.outputs.formattedTime}}"

      # EB에 CD 하기 위해 추가 작성
      - name: Generate deployment package
        run: |
          mkdir -p deploy
          cp build/libs/*.jar deploy/application.jar
          cp Procfile deploy/Procfile
          cp -r .ebextensions deploy/.ebextensions
          cd deploy && zip -r deploy.zip .
      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
          aws_secret_key: ${{ secrets.AWS_SECRET_KEY }}
          application_name: aws-portfolio-beanstalk 
          environment_name: Aws-portfolio-beanstalk-env 
          version_label: aws-portfolio-${{steps.current-time.outputs.formattedTime}}
          region: ap-northeast-2
          deployment_package: deploy/deploy.zip