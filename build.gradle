plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.14'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id "org.asciidoctor.jvm.convert" version "3.3.2" // RestDocs
}

group = 'com.portfolio'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '11'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.9.0'

    // Repository, DB
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	runtimeOnly 'com.mysql:mysql-connector-j'

    // Spring Security, JWT
	implementation group: 'com.auth0', name: 'java-jwt', version: '4.3.0'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'

    // RestDocs
    testImplementation 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

    // Sentry
	implementation 'io.sentry:sentry-spring-boot-starter:6.28.0'
	implementation 'io.sentry:sentry-logback:6.28.0'

	// AWS - S3
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'	

	// View
	implementation 'javax.servlet:jstl'
	implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'
	implementation 'org.springframework.security:spring-security-taglibs'
}

// RestDoc Script
ext {
    set('snippetsDir', file("build/generated-snippets"))
}

tasks.named('test') {
	outputs.dir snippetsDir
	useJUnitPlatform()
	include '**/*IntegrationTest.class'
}

tasks.named('asciidoctor') {
    inputs.dir snippetsDir
    dependsOn test
}

bootJar {
    dependsOn asciidoctor
    copy {
        from "${asciidoctor.outputDir}" // build/docs/asciidocÏùò api.docs.html
        into 'src/main/resources/static/docs'
    }
}

jar {
	enabled = false
}